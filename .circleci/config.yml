version: 2.1

aliases:
  # Workflow filters
  - &filter-not-release-or-master
    tags:
      ignore: /^v[0-9]+(\.[0-9]+){2}(-.+|[^-.]*)$/
    branches:
      ignore:
        - master
        - /^release-[0-9]+(\.[0-9]+){2}(-.+|[^-.]*)$/
  - &filter-only-master
    branches:
      only: master
  - &filter-only-release
    branches:
      ignore: /.*/
    tags:
      only: /^v[0-9]+(\.[0-9]+){2}(-.+|[^-.]*)$/
  - &filter-test-release
    branches:
      only: /^test-ci-release.*/

defaults: &defaults
  working_directory: ~/grafana-strava-datasource
  docker:
    - image: circleci/node:12

executors:
  default_exec:
    docker:
      - image: srclosson/grafana-plugin-ci-alpine:latest
  e2e_exec:
    docker:
      - image: srclosson/grafana-plugin-ci-e2e:latest

jobs:
  yarn_install:
    executor: default_exec
    steps:
      - checkout
      - restore_cache:
          name: restore node_modules
          keys:
            - build-cache-{{ .Environment.CACHE_VERSION }}-{{ checksum "yarn.lock" }}
      - run:
          name: Install dependencies
          command: |
            mkdir ci
            [ -f ~/project/node_modules/.bin/grafana-toolkit ] || yarn install --frozen-lockfile
      - save_cache:
          name: save node_modules
          paths:
            - ~/project/node_modules
          key: build-cache-{{ .Environment.CACHE_VERSION }}-{{ checksum "yarn.lock" }}

  build-frontend:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependency-cache-{{ checksum "yarn.lock" }}
      - run:
          name: yarn install
          command: 'yarn install --pure-lockfile --no-progress'
          no_output_timeout: 15m
      - save_cache:
          key: dependency-cache-{{ checksum "yarn.lock" }}
          paths:
          - ./node_modules
      - run: yarn build
      - persist_to_workspace:
          root: .
          paths:
            - dist/*

  build-backend:
    working_directory: ~/grafana-strava-datasource
    docker:
      - image: circleci/golang:1.13.7
    environment:
      GOPATH: /go
    steps:
      - checkout
      - attach_workspace:
          at: .
      - restore_cache:
          keys:
            - go-vendor-cache-{{ checksum "go.sum" }}
      - run:
          name: install backend
          command: 'make install-backend'
          no_output_timeout: 5m
      - save_cache:
          key: go-vendor-cache-{{ checksum "go.sum" }}
          paths:
          - ./vendor
      - run: make dist-backend
      - persist_to_workspace:
          root: .
          paths:
            - dist/*
      - run: ls -lh dist/

  lint-backend:
    working_directory: ~/grafana-strava-datasource
    docker:
    - image: circleci/golang:1.13.7
    environment:
      GOPATH: /go
    steps:
      - checkout
      - restore_cache:
          keys:
            - go-vendor-cache-{{ checksum "go.sum" }}
      - run:
          name: install backend
          command: 'make install-backend'
          no_output_timeout: 5m
      - save_cache:
          key: go-vendor-cache-{{ checksum "go.sum" }}
          paths:
          - ./vendor
      - run: make lint-backend

  test:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run:
          name: yarn install
          command: 'yarn install --pure-lockfile --no-progress'
          no_output_timeout: 15m
      - save_cache:
          key: dependency-cache-{{ checksum "yarn.lock" }}
          paths:
          - ./node_modules
      - run:
          name: Test
          command: yarn test
      - store_artifacts:
          path: coverage

  make-release-branch:
    <<: *defaults
    environment:
      CI_GIT_USER: CircleCI
      CI_GIT_EMAIL: ci@grafana.com
    steps:
      - add_ssh_keys:
          fingerprints:
            - "58:4a:11:32:2d:98:26:f7:33:b5:4d:f0:6b:72:08:fc"
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Create release branch
          command: ./.circleci/make-release.sh

  codespell:
    docker:
      - image: circleci/python
    steps:
      - checkout
      - run: sudo pip install codespell
      - run: codespell -S './.git*,./src/img*','./yarn.lock' -L que --ignore-words=./.codespell_ignore

  package-plugin:
    executor: e2e_exec
    working_directory: ~/grafana-strava-datasource
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Build plugin for all platforms
          command: 'make dist'
          no_output_timeout: 15m
      - run:
          name: Prepare plugin for packaging
          command: |
            mkdir -p ci/jobs/build_plugin
            mv dist/ ci/jobs/build_plugin
      - run:
          name: Package and sign plugin
          command: yarn grafana-toolkit plugin:ci-package
          no_output_timeout: 15m
      - persist_to_workspace:
          root: .
          paths:
            - ./
      - store_artifacts:
          path: ci/packages

workflows:
  version: 2
  build-master:
    jobs:
      - build-frontend:
          filters: *filter-only-master
      - build-backend:
          requires:
            - build-frontend
          filters: *filter-only-master
      - codespell:
          filters: *filter-only-master
      - lint-backend:
          filters: *filter-only-master
      - test:
          filters: *filter-only-master

  build-branches-and-prs:
    jobs:
      - build-frontend:
          filters: *filter-not-release-or-master
      - build-backend:
          requires:
            - build-frontend
          filters: *filter-not-release-or-master
      - codespell:
          filters: *filter-not-release-or-master
      - lint-backend:
          filters: *filter-not-release-or-master
      - test:
          filters: *filter-not-release-or-master

  build-release:
    jobs:
      - build-frontend:
          filters: *filter-only-release
      - build-backend:
          requires:
            - build-frontend
          filters: *filter-only-release
      - codespell:
          filters: *filter-only-release
      - lint-backend:
          filters: *filter-only-release
      - test:
          filters: *filter-only-release
      - make-release-branch:
          requires:
            - build-frontend
            - build-backend
            - codespell
            - lint-backend
            - test
          filters: *filter-only-release

  test-release:
    jobs:
      - build-frontend:
          filters: *filter-test-release
      - build-backend:
          requires:
            - build-frontend
          filters: *filter-test-release
      - codespell:
          filters: *filter-test-release
      - lint-backend:
          filters: *filter-test-release
      - test:
          filters: *filter-test-release
      - package-plugin:
          requires:
            - build-frontend
            - build-backend
            - codespell
            - lint-backend
            - test
          filters: *filter-test-release
