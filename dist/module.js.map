{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"react\"","webpack:///external \"@grafana/data\"","webpack:///external \"@grafana/ui\"","webpack:///external \"@grafana/runtime\"","webpack:///external \"emotion\"","webpack:///../node_modules/tslib/tslib.es6.js","webpack:///./types.ts","webpack:///./stravaApi.ts","webpack:///./polyline.ts","webpack:///./utils.ts","webpack:///./datasource.ts","webpack:///./components/VariableQueryEditor.tsx","webpack:///./components/ConfigEditor.tsx","webpack:///./components/AthleteLabel.tsx","webpack:///./components/QueryEditor.tsx","webpack:///./module.tsx"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__1__","__WEBPACK_EXTERNAL_MODULE__2__","__WEBPACK_EXTERNAL_MODULE__3__","__WEBPACK_EXTERNAL_MODULE__4__","extendStatics","b","setPrototypeOf","__proto__","Array","__extends","__","this","constructor","__assign","assign","arguments","length","apply","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","e","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","iterator","v","op","TypeError","pop","push","__values","__makeTemplateObject","cooked","raw","StravaAuthType","StravaMeasurementPreference","StravaQueryFormat","StravaQueryInterval","StravaQueryType","StravaActivityStat","StravaActivityData","StravaSplitStat","StravaActivityStream","VariableQueryTypes","datasourceId","backendAPIUrl","backendAuthUrl","promises","apiUrl","getAuthenticatedAthlete","params","tsdbRequest","getActivities","requestWithPagination","getActivity","id","include_all_efforts","getActivityStreams","streamType","url","data","chunk","page","limit","per_page","Math","min","concat","exchangeToken","authCode","tsdbAuthRequest","resetAccessToken","response","handleTsdbResponse","request","proxyfy","_request","datasourceRequest","method","endpoint","_tsdbRequest","headers","queryType","status","Error","statusText","responseData","error","func","funcName","funcScope","promiseKeeper","hash","getRequestHash","callOnce","args","srt","chr","len","charCodeAt","getHash","JSON","stringify","sign","decode","points","lat","lon","callback","values","x","current","bits","integers","velocityToPace","mps","pace","fround","DEFAULT_RANGE","from","to","instanceSettings","type","stravaApi","activities","stravaAuthType","jsonData","query","options","athlete","targets","some","before","range","unix","after","target","hide","Activities","filteredActivities","filterActivities","activityType","format","Table","tableData","transformActivitiesToTable","WorldMap","geomapData","transformActivitiesToGeomap","Heatmap","heatmapData","transformActivitiesToHeatmap","tsData","transformActivitiesToTimeseries","Activity","queryActivity","activityData","activityId","replace","toString","activity","Stats","queryActivityStats","Splits","queryActivitySplits","Geomap","queryActivityGeomap","activityStream","activityGraph","Pace","Velocity","streams","timeFiled","time","config","custom","valueFiled","number","frame","refId","fields","stream","ts","start_date","fitToTimeRange","streamValues","add","velocityDataToPace","velocityDataToSpeed","HeartRate","GradeSmooth","WattsCalc","Watts","sma","w_sum","j","smoothVelocityData","addField","splitStat","splits","splits_metric","split","Speed","moving_time","stats","singleActivityStat","activityStats","startsWith","gearStatsName","substring","gear","summaryPolyline","map","polyline","latitude","longitude","metricFindQuery","a","text","testDatasource","RefreshToken","getAuthCode","message","exec","window","location","search","filter","datapoints","activityStat","valueOf","sort","dpA","dpB","interval","No","aggInterval","Auto","Hour","Day","Week","INTERVAL_1w","Month","INTERVAL_4w","getAggregationIntervalFromTarget","interval_ms","getAggregationInterval","groupByTime","getClosestMonth","getNextMonth","AGG_SUM","groupByMonthSum","getClosestWeek","getNextWeek","groupByWeekSum","getPointTimeFrame","getNextTimeFrame","groupBySum","measurementPreference","measurement_preference","Meters","distanceUnit","Feet","lenghtUnit","string","unit","decimals","hidden","extendedStats","forEach","stat","dataRow","distance","getPreferredDistance","elapsed_time","average_heartrate","getPreferredLenght","total_elevation_gain","kilojoules","Distance","ElevationGain","middlePoint","getActivityMiddlePoint","start_latitude","start_longitude","summary_polyline","floor","reduce","acc","val","intervalFn","nextIntervalFn","groupByFn","frame_value","point","time_from","time_to","grouped_series","frame_values","frame_ts","point_frame_ts","timestamp","ms_interval","startOf","week_ts","metersToMiles","metersToFeet","stravaActivityTypeOptions","props","queryTypes","onQueryTypeChange","selectedItem","queryModel","onChange","onActivityTypeChange","onLimitStateChange","Number","currentTarget","setState","onLimitChange","state","render","className","width","labelWidth","tooltip","onBlur","AuthCodePattern","authOptions","OAuth","updateDatasource","k","secureJsonData","onOptionsChange","onResetClientSecret","secureJsonFields","clientSecret","onResetRefreshToken","refreshToken","onAccessTokenChange","accessToken","onClientIDChange","clientID","onClientSecretChange","onRefreshTokenChange","onAuthCodeChange","onAuthTypeChange","isLocationContainsCode","test","isLocationContainsError","getConnectWithStravaHref","currentLocation","origin","pathname","authUrl","ConfigEditor","defaults","getDerivedStateFromProps","connectWithStravaHref","event","placeholder","disabled","variant","onClick","href","src","getStyles","theme","athleteLabel","spacing","formInputHeight","border","radius","md","palette","dark4","athleteAvatar","athletePlaceholder","styles","imgClass","profile_medium","firstname","lastname","stravaQueryTypeOptions","description","stravaActivityStatOptions","ElapsedTime","MovingTime","AveragePower","AverageHeartRate","stravaActivityDataOptions","Graph","stravaActivityGraphOptions","Cadence","Altitude","stravaActivitySplitOptions","FORMAT_OPTIONS","TimeSeries","INTERVAL_OPTIONS","extendedStatsOptions","stravaStatsOptions","DefaultTarget","activitiesOptions","getSelectedQueryType","find","getSelectedActivityStat","getSelectedActivityType","getSelectedActivityData","getSelectedActivityGraph","getSelectedActivitySplit","getSelectedSingleActivityStat","getFormatOption","getIntervalOption","getSelectedActivityOption","selectedActivity","getActivitiesOptions","datasource","start_date_local","variables","getVariables","onQueryTypeChanged","option","onActivityStatChanged","onActivityDataChanged","onActivityGraphChanged","onActivitySplitChanged","onActivityTypeChanged","undefined","onFitToRangeChanged","onFormatChange","onIntervalChange","onActivityChanged","onExtendedStatsChanged","onSingleActivityStatChanged","componentDidMount","onRunQuery","renderActivitiesEditor","isSearchable","isClearable","renderActivityEditor","css","templateUrl","setConfigEditor","setQueryEditor","setAnnotationQueryCtrl","StravaAnnotationsQueryCtrl","setVariableQueryEditor"],"mappings":"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","file":"module.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","module.exports = __WEBPACK_EXTERNAL_MODULE__3__;","module.exports = __WEBPACK_EXTERNAL_MODULE__4__;","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { DataQuery, DataSourceJsonData, SelectableValue } from '@grafana/data';\n\nexport interface StravaJsonData extends DataSourceJsonData {\n  clientID: string;\n  stravaAuthType: StravaAuthType;\n}\n\nexport enum StravaAuthType {\n  OAuth = 'oauth',\n  RefreshToken = 'refresh_token',\n}\n\nexport interface StravaAthlete {\n  profile_medium: string;\n  firstname: string;\n  lastname: string;\n  measurement_preference: StravaMeasurementPreference;\n}\n\nexport enum StravaMeasurementPreference {\n  Meters = 'meters',\n  Feet = 'feet',\n}\n\nexport interface StravaSecureJsonData {\n  clientSecret: string;\n  authCode: string;\n  refreshToken: string;\n}\n\nexport interface StravaQuery extends DataQuery {\n  queryType: StravaQueryType;\n  activityStat: StravaActivityStat;\n  activityType: StravaActivityType;\n  format: StravaQueryFormat;\n  interval: StravaQueryInterval;\n  selectedActivity?: SelectableValue<number>;\n  activityId?: number;\n  activityGraph?: StravaActivityStream;\n  activityData?: string;\n  splitStat?: StravaSplitStat;\n  singleActivityStat?: string;\n  fitToTimeRange?: boolean;\n  extendedStats: string[];\n}\n\nexport enum StravaQueryFormat {\n  TimeSeries = 'time_series',\n  Table = 'table',\n  WorldMap = 'worldmap',\n  Heatmap = 'heatmap',\n}\n\nexport enum StravaQueryInterval {\n  No = 'no',\n  Auto = 'auto',\n  Hour = 'hour',\n  Day = 'day',\n  Week = 'week',\n  Month = 'month',\n}\n\nexport enum StravaQueryType {\n  Activities = 'Activities',\n  Activity = 'Activity',\n}\n\nexport enum StravaActivityStat {\n  Distance = 'distance',\n  MovingTime = 'moving_time',\n  ElapsedTime = 'elapsed_time',\n  ElevationGain = 'total_elevation_gain',\n  AveragePower = 'average_watts',\n  AverageHeartRate = 'average_heartrate',\n}\n\nexport type StravaActivityType = string | null;\n\nexport enum StravaActivityData {\n  Graph = 'graph',\n  Splits = 'splits',\n  Stats = 'stats',\n  Geomap = 'geomap',\n}\n\nexport enum StravaSplitStat {\n  HeartRate = 'average_heartrate',\n  Speed = 'average_speed',\n  MovingTime = 'moving_time',\n  ElapsedTime = 'elapsed_time',\n}\n\nexport enum StravaActivityStream {\n  Distance = 'distance',\n  HeartRate = 'heartrate',\n  Altitude = 'altitude',\n  Cadence = 'cadence',\n  Velocity = 'velocity_smooth',\n  // Special type for pace which actually calculated from velocity\n  Pace = 'pace',\n  Watts = 'watts',\n  WattsCalc = 'watts_calc',\n  Temp = 'temp',\n  Moving = 'moving',\n  GradeSmooth = 'grade_smooth',\n  GradeAdjustedDistance = 'grade_adjusted_distance',\n}\n\nexport interface VariableQuery {\n  queryType: VariableQueryTypes;\n  activityType: string;\n  limit: number;\n}\n\nexport enum VariableQueryTypes {\n  Activity = 'activity',\n}\n","import { getBackendSrv } from '@grafana/runtime';\n\nexport default class StravaApi {\n  datasourceId: number;\n  backendAPIUrl: string;\n  backendAuthUrl: string;\n  apiUrl: string;\n  promises: any;\n\n  constructor(datasourceId: number) {\n    this.datasourceId = datasourceId;\n    this.backendAPIUrl = `/api/datasources/${this.datasourceId}/resources/strava-api`;\n    this.backendAuthUrl = `/api/datasources/${this.datasourceId}/resources/auth`;\n\n    // this.apiUrl = url;\n    this.promises = {};\n    this.apiUrl = '';\n  }\n\n  async getAuthenticatedAthlete(params?: any) {\n    return await this.tsdbRequest('athlete', params);\n  }\n\n  async getActivities(params?: any) {\n    return await this.requestWithPagination('athlete/activities', params);\n  }\n\n  async getActivity(params?: any) {\n    const { id, include_all_efforts } = params;\n    return await this.tsdbRequest(`/activities/${id}`, { include_all_efforts });\n  }\n\n  async getActivityStreams(params?: any) {\n    const { id, streamType } = params;\n    // const streamTypes = [\n    //   'heartrate', 'altitude', 'distance', 'cadence', 'velocity_smooth',\n    //   'watts', 'watts_calc', 'temp', 'moving', 'grade_smooth', 'grade_adjusted_distance'\n    // ];\n    // const streamsParams = streamTypes.join('&keys=');\n    return await this.tsdbRequest(`/activities/${id}/streams?keys=${streamType},time&key_by_type=true`, {\n      // key_by_type: true,\n      // keys: \"heartrate\",\n    });\n  }\n\n  async requestWithPagination(url: string, params?: any) {\n    let data: any[] = [];\n    let chunk = [];\n    let page = 1;\n    const limit = params && params.limit;\n    let per_page = (params && params.per_page) || 200;\n    if (limit) {\n      per_page = Math.min(per_page, limit);\n    }\n\n    while (!(chunk.length === 0 && page !== 1) && !(limit && data.length >= limit)) {\n      params = {\n        ...params,\n        per_page,\n        page,\n      };\n      try {\n        // chunk = await this.request(url, params);\n        chunk = await this.tsdbRequest(url, params);\n      } catch (error) {\n        throw error;\n      }\n      data = data.concat(chunk);\n      page++;\n    }\n    return data;\n  }\n\n  async exchangeToken(authCode: any) {\n    return await this.tsdbAuthRequest({ authCode });\n  }\n\n  async resetAccessToken() {\n    try {\n      const response = await getBackendSrv().get(`/api/datasources/${this.datasourceId}/resources/reset-access-token`);\n      return this.handleTsdbResponse(response);\n    } catch (error) {\n      console.log(error);\n      throw error;\n    }\n  }\n\n  async request(url: string, params?: any) {\n    return this.proxyfy(this._request, '_request', this)(url, params);\n  }\n\n  async _request(url: string, params?: any) {\n    try {\n      const response = await getBackendSrv().datasourceRequest({\n        url: `${this.apiUrl}/strava/${url}`,\n        method: 'GET',\n        params,\n      });\n      return response.data;\n    } catch (error) {\n      console.log(error);\n      throw error;\n    }\n  }\n\n  async tsdbRequest(endpoint: string, params?: any) {\n    return this.proxyfy(this._tsdbRequest, '_tsdbRequest', this)(endpoint, params);\n  }\n\n  async _tsdbRequest(endpoint: string, params?: any) {\n    try {\n      const response = await getBackendSrv().datasourceRequest({\n        url: this.backendAPIUrl,\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        data: {\n          datasourceId: this.datasourceId,\n          endpoint,\n          params,\n        },\n      });\n      return this.handleTsdbResponse(response);\n    } catch (error) {\n      console.log(error);\n      throw error;\n    }\n  }\n\n  async tsdbAuthRequest(params?: any) {\n    const queryType = 'stravaAuth';\n\n    try {\n      const response = await getBackendSrv().datasourceRequest({\n        url: this.backendAuthUrl,\n        method: 'POST',\n        data: params,\n      });\n      return this.handleTsdbResponse(response, queryType);\n    } catch (error) {\n      console.log(error);\n      throw error;\n    }\n  }\n\n  handleTsdbResponse(response: any, queryType = 'stravaAPI') {\n    if (response && (response.status >= 400 || response.status < 0)) {\n      throw Error(response.statusText);\n    }\n\n    if (!response || !response.data || !response.data.result) {\n      return [];\n    }\n\n    const responseData = response.data.result;\n    if (responseData.error) {\n      throw Error(responseData.error);\n    }\n\n    return responseData;\n  }\n\n  proxyfy(func: any, funcName: any, funcScope: any) {\n    if (!this.promises[funcName]) {\n      this.promises[funcName] = {};\n    }\n    const promiseKeeper = this.promises[funcName];\n    return callOnce(func, promiseKeeper, funcScope);\n  }\n}\n\n/**\n * Wrap request to prevent multiple calls\n * with same params when waiting for result.\n */\nfunction callOnce(func: any, promiseKeeper: any, funcScope: any): (...args: any[]) => any {\n  return function () {\n    var hash = getRequestHash(arguments);\n    if (!promiseKeeper[hash]) {\n      promiseKeeper[hash] = Promise.resolve(\n        func.apply(funcScope, arguments).then((result: any) => {\n          promiseKeeper[hash] = null;\n          return result;\n        })\n      );\n    }\n    return promiseKeeper[hash];\n  };\n}\n\nfunction getRequestHash(args: any) {\n  const argsJson = JSON.stringify(args);\n  return getHash(argsJson);\n}\n\nfunction getHash(srt: string) {\n  var hash = 0,\n    i,\n    chr,\n    len;\n  if (srt.length !== 0) {\n    for (i = 0, len = srt.length; i < len; i++) {\n      chr = srt.charCodeAt(i);\n      hash = (hash << 5) - hash + chr;\n      hash |= 0; // Convert to 32bit integer\n    }\n  }\n  return hash;\n}\n","/**\n * This file contains code from google-polyline\n * https://github.com/jhermsmeier/node-google-polyline\n *\n * https://github.com/jhermsmeier/node-google-polyline/blob/master/lib/decode.js\n */\n\nconst PRECISION = 1e5;\n\nexport function decode(value: any) {\n  var points: any[] = [];\n  var lat = 0;\n  var lon = 0;\n\n  integers(value, function (x: number, y: number) {\n    lat += x;\n    lon += y;\n    points.push([lat / PRECISION, lon / PRECISION]);\n  });\n\n  return points;\n}\n\nexport function sign(value: any) {\n  return value & 1 ? ~(value >>> 1) : value >>> 1;\n}\n\nexport function integers(value: any, callback: any) {\n  var values = 0;\n  var x = 0;\n  var y = 0;\n\n  var byte = 0;\n  var current = 0;\n  var bits = 0;\n\n  for (var i = 0; i < value.length; i++) {\n    byte = value.charCodeAt(i) - 63;\n    current = current | ((byte & 0x1f) << bits);\n    bits = bits + 5;\n\n    if (byte < 0x20) {\n      if (++values & 1) {\n        x = sign(current);\n      } else {\n        y = sign(current);\n        callback(x, y);\n      }\n      current = 0;\n      bits = 0;\n    }\n  }\n\n  return values;\n}\n\nexport default {\n  decode,\n};\n","export function velocityToPace(mps: number): number {\n  if (mps === 0) {\n    return 0;\n  }\n  const pace = Math.fround(1000 / (mps * 60));\n  return Math.min(10, pace);\n}\n\nexport function velocityToSpeed(mps: number): number {\n  return mps * 3.6;\n}\n\nexport function velocityDataToPace(data: number[]): number[] {\n  for (let i = 0; i < data.length; i++) {\n    // m/s to min/km\n    data[i] = velocityToPace(data[i]);\n  }\n  return data;\n}\n\nexport function velocityDataToSpeed(data: number[]): number[] {\n  for (let i = 0; i < data.length; i++) {\n    // m/s to km/h\n    data[i] = data[i] * 3.6;\n  }\n  return data;\n}\n\nexport function smoothVelocityData(data: number[]): number[] {\n  // It's not possible to calculate MA if n greater than number of points\n  const SMOOTH_RATIO = 20;\n  const n = Math.min(SMOOTH_RATIO, data.length);\n\n  const sma = [];\n  let w_sum = 0;\n\n  // Initial window\n  for (let i = n; i > 0; i--) {\n    w_sum += data[n - i];\n  }\n  for (let i = 0; i < n; i++) {\n    sma.push(w_sum / n);\n  }\n\n  for (let i = n; i < data.length; i++) {\n    w_sum = 0;\n    for (let j = 0; j < n; j++) {\n      w_sum += data[i - j];\n    }\n    sma.push(w_sum / n);\n  }\n  return sma;\n}\n","import {\n  DataQueryRequest,\n  DataSourceApi,\n  DataSourceInstanceSettings,\n  TimeSeries,\n  dateTime,\n  TimeRange,\n  TimeSeriesPoints,\n  TimeSeriesValue,\n  TIME_SERIES_TIME_FIELD_NAME,\n  FieldType,\n  MutableField,\n  ArrayVector,\n  MutableDataFrame,\n  TIME_SERIES_VALUE_FIELD_NAME,\n  MetricFindValue,\n} from '@grafana/data';\nimport StravaApi from './stravaApi';\nimport polyline from './polyline';\nimport {\n  StravaActivityStat,\n  StravaJsonData,\n  StravaQuery,\n  StravaQueryFormat,\n  StravaActivityType,\n  StravaQueryInterval,\n  StravaQueryType,\n  StravaActivityStream,\n  StravaActivityData,\n  StravaSplitStat,\n  VariableQuery,\n  StravaAuthType,\n  StravaAthlete,\n  StravaMeasurementPreference,\n} from './types';\nimport { smoothVelocityData, velocityDataToPace, velocityDataToSpeed, velocityToSpeed } from 'utils';\nimport { getTemplateSrv } from '@grafana/runtime';\n\nconst DEFAULT_RANGE = {\n  from: dateTime(),\n  to: dateTime(),\n  raw: {\n    from: 'now',\n    to: 'now',\n  },\n};\n\nexport const DEFAULT_LIMIT = 100;\n\nexport default class StravaDatasource extends DataSourceApi<StravaQuery, StravaJsonData> {\n  type: any;\n  datasourceId: number;\n  stravaAuthType: StravaAuthType;\n  apiUrl: string;\n  stravaApi: StravaApi;\n  activities: any[];\n  athlete?: StravaAthlete;\n\n  constructor(instanceSettings: DataSourceInstanceSettings<StravaJsonData>) {\n    super(instanceSettings);\n    this.type = 'strava';\n    this.datasourceId = instanceSettings.id;\n    this.apiUrl = instanceSettings.url!;\n    this.stravaApi = new StravaApi(this.datasourceId);\n    this.activities = [];\n    this.stravaAuthType = instanceSettings.jsonData.stravaAuthType;\n  }\n\n  async query(options: DataQueryRequest<StravaQuery>) {\n    const data: any[] = [];\n    let activities = [];\n\n    if (!this.athlete) {\n      this.athlete = await this.stravaApi.getAuthenticatedAthlete();\n    }\n\n    let queryActivities = options.targets.some((t) => t.queryType === StravaQueryType.Activities);\n\n    if (queryActivities) {\n      activities = await this.stravaApi.getActivities({\n        before: options.range?.to.unix(),\n        after: options.range?.from.unix(),\n      });\n    }\n\n    for (const target of options.targets) {\n      if (target.hide) {\n        continue;\n      }\n\n      if (target.queryType === StravaQueryType.Activities) {\n        const filteredActivities = this.filterActivities(activities, target.activityType);\n        switch (target.format) {\n          case StravaQueryFormat.Table:\n            const tableData = this.transformActivitiesToTable(filteredActivities, target);\n            data.push(tableData);\n            break;\n          case StravaQueryFormat.WorldMap:\n            const geomapData = this.transformActivitiesToGeomap(filteredActivities, target);\n            data.push(geomapData);\n            break;\n          case StravaQueryFormat.Heatmap:\n            const heatmapData = this.transformActivitiesToHeatmap(filteredActivities, target);\n            data.push(heatmapData);\n            break;\n          default:\n            const tsData = this.transformActivitiesToTimeseries(\n              filteredActivities,\n              target,\n              options.range || DEFAULT_RANGE\n            );\n            data.push(tsData);\n            break;\n        }\n      } else if (target.queryType === StravaQueryType.Activity) {\n        const activityData = await this.queryActivity(options, target);\n        data.push(activityData);\n      }\n    }\n\n    return { data };\n  }\n\n  async queryActivity(options: DataQueryRequest<StravaQuery>, target: StravaQuery) {\n    const activityId = getTemplateSrv().replace(target.activityId?.toString());\n    const activity = await this.stravaApi.getActivity({\n      id: activityId,\n      include_all_efforts: true,\n    });\n\n    if (target.activityData === StravaActivityData.Stats) {\n      return this.queryActivityStats(activity, target, options);\n    }\n\n    if (target.activityData === StravaActivityData.Splits) {\n      return this.queryActivitySplits(activity, target, options);\n    }\n\n    if (target.activityData === StravaActivityData.Geomap) {\n      return this.queryActivityGeomap(activity, target, options);\n    }\n\n    let activityStream = target.activityGraph;\n    if (activityStream === StravaActivityStream.Pace) {\n      activityStream = StravaActivityStream.Velocity;\n    }\n\n    if (!activityStream) {\n      return null;\n    }\n\n    const streams = await this.stravaApi.getActivityStreams({\n      id: activityId,\n      streamType: activityStream,\n    });\n\n    const timeFiled: MutableField<number> = {\n      name: TIME_SERIES_TIME_FIELD_NAME,\n      type: FieldType.time,\n      config: {\n        custom: {},\n      },\n      values: new ArrayVector(),\n    };\n\n    const valueFiled: MutableField<number> = {\n      name: activityStream,\n      type: FieldType.number,\n      config: {\n        custom: {},\n      },\n      values: new ArrayVector(),\n    };\n\n    const frame = new MutableDataFrame({\n      name: activity.name,\n      refId: target.refId,\n      fields: [],\n    });\n\n    const stream = streams[activityStream];\n    if (!stream) {\n      return frame;\n    }\n\n    let ts = dateTime(activity.start_date).unix();\n    if (target.fitToTimeRange) {\n      ts = options.range.from.unix();\n    }\n\n    let streamValues: number[] = [];\n    for (let i = 0; i < stream.data.length; i++) {\n      timeFiled.values.add(ts * 1000);\n      streamValues.push(stream.data[i]);\n      ts++;\n    }\n\n    if (activity.type === 'Run') {\n      if (target.activityGraph === StravaActivityStream.Pace) {\n        valueFiled.name = 'pace';\n        streamValues = velocityDataToPace(streamValues);\n      }\n    } else {\n      if (target.activityGraph === StravaActivityStream.Velocity) {\n        valueFiled.name = 'speed';\n        streamValues = velocityDataToSpeed(streamValues);\n      }\n    }\n\n    // Smooth data\n    if (\n      activityStream === StravaActivityStream.Velocity ||\n      activityStream === StravaActivityStream.HeartRate ||\n      activityStream === StravaActivityStream.GradeSmooth ||\n      activityStream === StravaActivityStream.WattsCalc ||\n      activityStream === StravaActivityStream.Watts\n    ) {\n      streamValues = smoothVelocityData(streamValues);\n    }\n\n    valueFiled.values = new ArrayVector(streamValues);\n    frame.addField(timeFiled);\n    frame.addField(valueFiled);\n\n    return frame;\n  }\n\n  queryActivitySplits(activity: any, target: StravaQuery, options: DataQueryRequest<StravaQuery>) {\n    const timeFiled: MutableField<number> = {\n      name: TIME_SERIES_TIME_FIELD_NAME,\n      type: FieldType.time,\n      config: {\n        custom: {},\n      },\n      values: new ArrayVector(),\n    };\n\n    const splitStat = target.splitStat || '';\n\n    const valueFiled: MutableField<number> = {\n      name: splitStat || TIME_SERIES_VALUE_FIELD_NAME,\n      type: FieldType.number,\n      config: {\n        custom: {},\n      },\n      values: new ArrayVector(),\n    };\n\n    const frame = new MutableDataFrame({\n      name: activity.name,\n      refId: target.refId,\n      fields: [],\n    });\n\n    let ts = dateTime(activity.start_date).unix();\n    if (target.fitToTimeRange) {\n      ts = options.range.from.unix();\n    }\n\n    const splits: any[] = activity.splits_metric;\n    for (let i = 0; i < splits.length; i++) {\n      const split = splits[i];\n      timeFiled.values.add(ts * 1000);\n      let value = split[splitStat];\n      if (splitStat === StravaSplitStat.Speed) {\n        value = velocityToSpeed(value);\n      }\n      valueFiled.values.add(value);\n      ts += split.moving_time;\n    }\n\n    frame.addField(timeFiled);\n    frame.addField(valueFiled);\n\n    return frame;\n  }\n\n  queryActivityStats(activity: any, target: StravaQuery, options: DataQueryRequest<StravaQuery>) {\n    const stats = target.singleActivityStat || 'name';\n    const frame = new MutableDataFrame({\n      name: activity.name,\n      refId: target.refId,\n      fields: [{ name: 'time', type: FieldType.time }, { name: stats }],\n    });\n\n    let activityStats = activity[stats];\n    if (stats.startsWith('gear_')) {\n      const gearStatsName = stats.substring('gear_'.length);\n      activityStats = activity.gear[gearStatsName];\n    }\n\n    frame.add({\n      time: dateTime(activity.start_date),\n      [stats]: activityStats,\n    });\n\n    return frame;\n  }\n\n  queryActivityGeomap(activity: any, target: StravaQuery, options: DataQueryRequest<StravaQuery>) {\n    const frame = new MutableDataFrame({\n      name: activity.name,\n      refId: target.refId,\n      fields: [\n        { name: 'latitude', type: FieldType.number },\n        { name: 'longitude', type: FieldType.number },\n        { name: 'value', type: FieldType.number },\n      ],\n    });\n\n    const summaryPolyline = activity?.map?.polyline;\n    const points = polyline.decode(summaryPolyline);\n\n    for (let i = 0; i < points.length; i++) {\n      frame.add({\n        latitude: points[i][0],\n        longitude: points[i][1],\n        value: 1,\n      });\n    }\n\n    return frame;\n  }\n\n  async metricFindQuery(query: VariableQuery, options?: any): Promise<MetricFindValue[]> {\n    const limit = query.limit || DEFAULT_LIMIT;\n    let activities = await this.stravaApi.getActivities({ limit });\n    activities = this.filterActivities(activities, query.activityType);\n    const variableOptions: MetricFindValue[] = activities.map((a) => ({\n      value: a.id,\n      text: a.name,\n    }));\n    return variableOptions;\n  }\n\n  async testDatasource() {\n    if (this.stravaAuthType !== StravaAuthType.RefreshToken) {\n      const authCode = this.getAuthCode();\n      if (authCode) {\n        // Exchange auth code for new refresh token if \"Connect with Strava\" button clicked\n        try {\n          await this.stravaApi.exchangeToken(authCode);\n        } catch (err) {\n          console.log(err);\n        }\n      }\n    }\n\n    try {\n      await this.stravaApi.resetAccessToken();\n      await this.stravaApi.getActivities({ per_page: 2, limit: 2 });\n      return { status: 'success', message: 'Data source is working' };\n    } catch (err: any) {\n      const message = err?.data?.message || '';\n      return { status: 'error', message: `Cannot connect to Strava API${message ? ': ' + message : ''}` };\n    }\n  }\n\n  getAuthCode() {\n    const AuthCodePattern = /code=([\\w]+)/;\n    const result = AuthCodePattern.exec(window.location.search);\n    const authCode = result && result.length && result[1];\n    return authCode;\n  }\n\n  filterActivities(activities: any[], activityType: StravaActivityType): any[] {\n    if (!activityType) {\n      // No filter, return all\n      return activities;\n    }\n\n    return activities.filter((activity) => {\n      if (activityType === 'Other') {\n        return activity.type !== 'Run' && activity.type !== 'Ride';\n      } else {\n      }\n      return activity.type === activityType;\n    });\n  }\n\n  transformActivitiesToTimeseries(data: any[], target: StravaQuery, range: TimeRange): TimeSeries {\n    let datapoints: any[] = [];\n    for (const activity of data) {\n      datapoints.push([activity[target.activityStat], dateTime(activity.start_date).valueOf()]);\n    }\n    datapoints.sort((dpA, dpB) => dpA[1] - dpB[1]);\n    if (target.interval !== StravaQueryInterval.No) {\n      const aggInterval =\n        !target.interval || target.interval === StravaQueryInterval.Auto\n          ? getAggregationInterval(range)\n          : getAggregationIntervalFromTarget(target);\n      if (aggInterval >= INTERVAL_4w) {\n        datapoints = groupByMonthSum(datapoints, range);\n      } else if (aggInterval === INTERVAL_1w) {\n        datapoints = groupByWeekSum(datapoints, range);\n      } else {\n        datapoints = groupBySum(datapoints, range, aggInterval);\n      }\n    }\n    const alias = `${target.activityType ? target.activityType + '_' : ''}${target.activityStat}`;\n    return {\n      target: alias,\n      datapoints,\n    };\n  }\n\n  transformActivitiesToTable(data: any[], target: StravaQuery) {\n    const measurementPreference = this.athlete?.measurement_preference || StravaMeasurementPreference.Meters;\n    const distanceUnit = measurementPreference === StravaMeasurementPreference.Feet ? 'lengthmi' : 'lengthm';\n    const lenghtUnit = measurementPreference === StravaMeasurementPreference.Feet ? 'lengthft' : 'lengthm';\n\n    const frame = new MutableDataFrame({\n      refId: target.refId,\n      fields: [\n        { name: 'time', type: FieldType.time },\n        { name: 'name', type: FieldType.string },\n        { name: 'distance', type: FieldType.number, config: { unit: distanceUnit } },\n        { name: 'moving time', type: FieldType.number, config: { unit: 'dthms' } },\n        { name: 'elapsed time', type: FieldType.number, config: { unit: 'dthms' } },\n        { name: 'heart rate', type: FieldType.number, config: { unit: 'none', decimals: 0 } },\n        { name: 'elevation gain', type: FieldType.number, config: { unit: lenghtUnit, decimals: 0 } },\n        { name: 'kilojoules', type: FieldType.number, config: { unit: 'joule' } },\n        { name: 'type', type: FieldType.string },\n        { name: 'id', type: FieldType.string, config: { unit: 'none', custom: { hidden: true } } },\n      ],\n    });\n\n    target.extendedStats?.forEach((stat) => {\n      frame.addField({ name: stat });\n    });\n\n    for (let i = 0; i < data.length; i++) {\n      const activity = data[i];\n      const dataRow: any = {\n        time: dateTime(activity.start_date),\n        name: activity.name,\n        distance: getPreferredDistance(activity.distance, measurementPreference),\n        'moving time': activity.moving_time,\n        'elapsed time': activity.elapsed_time,\n        'heart rate': activity.average_heartrate,\n        'elevation gain': getPreferredLenght(activity.total_elevation_gain, measurementPreference),\n        kilojoules: activity.kilojoules,\n        type: activity.type,\n        id: activity.id,\n      };\n      target.extendedStats?.forEach((stat) => {\n        dataRow[stat] = activity[stat];\n      });\n      frame.add(dataRow);\n    }\n    return frame;\n  }\n\n  transformActivitiesToGeomap(activities: any[], target: StravaQuery) {\n    const unit =\n      target.activityStat === StravaActivityStat.Distance || target.activityStat === StravaActivityStat.ElevationGain\n        ? 'lengthm'\n        : 's';\n\n    const frame = new MutableDataFrame({\n      name: 'activities',\n      refId: target.refId,\n      fields: [\n        { name: 'name', type: FieldType.string },\n        { name: 'latitude', type: FieldType.number },\n        { name: 'longitude', type: FieldType.number },\n        { name: 'value', type: FieldType.number, config: { unit } },\n      ],\n    });\n\n    for (const activity of activities) {\n      const middlePoint = getActivityMiddlePoint(activity);\n      const latitude = middlePoint ? middlePoint[0] : activity.start_latitude;\n      const longitude = middlePoint ? middlePoint[1] : activity.start_longitude;\n      if (latitude && longitude) {\n        frame.add({\n          name: activity.name,\n          value: activity[target.activityStat],\n          latitude,\n          longitude,\n        });\n      }\n    }\n    return frame;\n  }\n\n  transformActivitiesToHeatmap(activities: any[], target: StravaQuery) {\n    const frame = new MutableDataFrame({\n      name: 'heatmap',\n      refId: target.refId,\n      fields: [\n        { name: 'latitude', type: FieldType.number },\n        { name: 'longitude', type: FieldType.number },\n        { name: 'value', type: FieldType.number },\n      ],\n    });\n\n    for (const activity of activities) {\n      const summaryPolyline = activity?.map?.summary_polyline;\n      if (summaryPolyline) {\n        const points = polyline.decode(summaryPolyline);\n        for (let i = 0; i < points.length; i++) {\n          frame.add({\n            latitude: points[i][0],\n            longitude: points[i][1],\n            value: 1,\n          });\n        }\n      }\n    }\n    return frame;\n  }\n}\n\nfunction getActivityMiddlePoint(activity: any): number[] | null {\n  if (!activity.map || !activity.map.summary_polyline) {\n    return null;\n  }\n\n  const summaryPolyline = activity.map.summary_polyline;\n  const points = polyline.decode(summaryPolyline);\n  if (points && points.length) {\n    const middleIndex = Math.floor(points.length / 2);\n    return points[middleIndex];\n  } else {\n    return null;\n  }\n}\n\nconst INTERVAL_1h = 3600000;\nconst INTERVAL_1d = 86400000;\nconst INTERVAL_1w = 604800000;\nconst INTERVAL_4w = 2419200000;\n\nfunction getAggregationInterval(range: TimeRange): number {\n  const interval = range.to.unix() - range.from.unix();\n  const interval_ms = interval * 1000;\n  switch (true) {\n    // 4d\n    case interval_ms <= 345600000:\n      return INTERVAL_1h; // 1h\n    // 90d\n    case interval_ms <= 7776000000:\n      return INTERVAL_1d; // 1d\n    // 1y\n    case interval_ms <= 31536000000:\n      return INTERVAL_1w; // 1w\n    default:\n      return INTERVAL_4w; // 4w\n  }\n}\n\nfunction getAggregationIntervalFromTarget(target: StravaQuery): number {\n  switch (target.interval) {\n    case StravaQueryInterval.Hour:\n      return INTERVAL_1h;\n    case StravaQueryInterval.Day:\n      return INTERVAL_1d;\n    case StravaQueryInterval.Week:\n      return INTERVAL_1w;\n    case StravaQueryInterval.Month:\n      return INTERVAL_4w;\n    default:\n      return INTERVAL_4w;\n  }\n}\n\nconst POINT_VALUE = 0;\nconst POINT_TIMESTAMP = 1;\n\nconst AGG_SUM = (values: TimeSeriesValue[]) => {\n  return values.reduce((acc, val) => acc! + val!);\n};\n\nexport function groupBySum(datapoints: TimeSeriesPoints, range: TimeRange, interval: number): TimeSeriesPoints {\n  return groupByTime(datapoints, range, interval, getPointTimeFrame, getNextTimeFrame, AGG_SUM);\n}\n\nexport function groupByWeekSum(datapoints: TimeSeriesPoints, range: TimeRange): TimeSeriesPoints {\n  return groupByTime(datapoints, range, null, getClosestWeek, getNextWeek, AGG_SUM);\n}\n\nexport function groupByMonthSum(datapoints: TimeSeriesPoints, range: TimeRange): TimeSeriesPoints {\n  return groupByTime(datapoints, range, null, getClosestMonth, getNextMonth, AGG_SUM);\n}\n\nexport function groupByTime(\n  datapoints: any[],\n  range: TimeRange,\n  interval: number | null,\n  intervalFn: any,\n  nextIntervalFn: any,\n  groupByFn: any\n): any[] {\n  if (datapoints.length === 0) {\n    return [];\n  }\n\n  const time_from = range.from.unix() * 1000;\n  const time_to = range.to.unix() * 1000;\n  let grouped_series: any[] = [];\n  let frame_values: any[] = [];\n  let frame_value;\n  let frame_ts = datapoints.length ? intervalFn(time_from, interval) : 0;\n  let point_frame_ts = frame_ts;\n  let point;\n\n  for (let i = 0; i < datapoints.length; i++) {\n    point = datapoints[i];\n    point_frame_ts = intervalFn(point[POINT_TIMESTAMP], interval);\n    if (point_frame_ts === frame_ts) {\n      frame_values.push(point[POINT_VALUE]);\n    } else if (point_frame_ts > frame_ts) {\n      frame_value = frame_values.length ? groupByFn(frame_values) : null;\n      grouped_series.push([frame_value, frame_ts]);\n\n      // Move frame window to next non-empty interval and fill empty by null\n      frame_ts = nextIntervalFn(frame_ts, interval);\n      while (frame_ts < point_frame_ts) {\n        grouped_series.push([null, frame_ts]);\n        frame_ts = nextIntervalFn(frame_ts, interval);\n      }\n      frame_values = [point[POINT_VALUE]];\n    }\n  }\n\n  frame_value = groupByFn(frame_values);\n  grouped_series.push([frame_value, frame_ts]);\n\n  // Move frame window to end of time range and fill empty by null\n  frame_ts = nextIntervalFn(frame_ts, interval);\n  while (frame_ts < time_to) {\n    grouped_series.push([null, frame_ts]);\n    frame_ts = nextIntervalFn(frame_ts, interval);\n  }\n\n  return grouped_series;\n}\n\nfunction getPointTimeFrame(timestamp: any, ms_interval: any) {\n  return Math.floor(timestamp / ms_interval) * ms_interval;\n}\n\nfunction getNextTimeFrame(timestamp: any, ms_interval: any) {\n  return timestamp + ms_interval;\n}\n\nfunction getClosestMonth(timestamp: any): number {\n  const month_time = dateTime(timestamp).startOf('month');\n  return month_time.unix() * 1000;\n}\n\nfunction getNextMonth(timestamp: any): number {\n  const next_month_time = dateTime(timestamp).add(1, 'month');\n  return next_month_time.unix() * 1000;\n}\n\nfunction getClosestWeek(timestamp: any): number {\n  // The first Monday after the Unix Epoch begins on Jan 5, 1970, 00:00.\n  // This is a UNIX timestamp of 96 hours or 345600000 ms\n  const FIRST_MONDAY_MS = 345600000;\n  const week_ts = timestamp - FIRST_MONDAY_MS;\n  return Math.floor(week_ts / INTERVAL_1w) * INTERVAL_1w + FIRST_MONDAY_MS;\n}\n\nfunction getNextWeek(timestamp: any): number {\n  return timestamp + INTERVAL_1w;\n}\n\nfunction getPreferredDistance(value: number, measurementPreference: StravaMeasurementPreference): number {\n  return measurementPreference === StravaMeasurementPreference.Feet ? metersToMiles(value) : value;\n}\n\nfunction getPreferredLenght(value: number, measurementPreference: StravaMeasurementPreference): number {\n  return measurementPreference === StravaMeasurementPreference.Feet ? metersToFeet(value) : value;\n}\n\nfunction metersToFeet(value: number): number {\n  return value / 0.3048;\n}\n\nfunction metersToMiles(value: number): number {\n  return value / 1609.344;\n}\n","import React, { PureComponent } from 'react';\nimport { SelectableValue } from '@grafana/data';\nimport { VariableQueryTypes, StravaActivityType, VariableQuery } from '../types';\nimport { InlineField, InlineFieldRow, InlineFormLabel, Input, Select } from '@grafana/ui';\nimport { DEFAULT_LIMIT } from '../datasource';\n\nconst stravaActivityTypeOptions: Array<SelectableValue<StravaActivityType>> = [\n  { value: '', label: 'All' },\n  { value: 'Run', label: 'Run' },\n  { value: 'Ride', label: 'Ride' },\n  { value: 'Other', label: 'Other' },\n];\n\nexport interface VariableQueryProps {\n  query: VariableQuery;\n  onChange: (query: VariableQuery, definition: string) => void;\n  datasource: any;\n  templateSrv: any;\n}\n\ninterface State {\n  limit: number;\n}\n\nexport class StravaVariableQueryEditor extends PureComponent<VariableQueryProps, State> {\n  constructor(props: VariableQueryProps) {\n    super(props);\n    const { query } = this.props;\n    this.state = {\n      limit: query.limit || DEFAULT_LIMIT,\n    };\n  }\n\n  queryTypes: Array<SelectableValue<VariableQueryTypes>> = [{ value: VariableQueryTypes.Activity, label: 'Activity' }];\n\n  onQueryTypeChange = (selectedItem: SelectableValue<VariableQueryTypes>) => {\n    const queryType = selectedItem.value || VariableQueryTypes.Activity;\n\n    const queryModel: VariableQuery = { ...this.props.query, queryType };\n    this.props.onChange(queryModel, `Strava - ${queryType}`);\n  };\n\n  onActivityTypeChange = (selectedItem: SelectableValue<StravaActivityType>) => {\n    const activityType = selectedItem.value || '';\n\n    const queryModel: VariableQuery = { ...this.props.query, activityType };\n    this.props.onChange(queryModel, `Strava - ${this.props.query.queryType}`);\n  };\n\n  onLimitStateChange = (e: React.SyntheticEvent<HTMLInputElement>) => {\n    const limit = Number(e.currentTarget.value || '');\n    this.setState({ limit });\n  };\n\n  onLimitChange = (e: React.SyntheticEvent<HTMLInputElement>) => {\n    const limit = Number(e.currentTarget.value || '');\n    const queryModel: VariableQuery = { ...this.props.query, limit };\n    this.props.onChange(queryModel, `Strava - ${this.props.query.queryType}`);\n  };\n\n  render() {\n    const { query } = this.props;\n    const { limit } = this.state;\n\n    return (\n      <>\n        <div className=\"gf-form max-width-21\">\n          <InlineFormLabel width={10}>Query Type</InlineFormLabel>\n          <Select width={16} value={query.queryType} options={this.queryTypes} onChange={this.onQueryTypeChange} />\n        </div>\n        <div className=\"gf-form-inline\">\n          {query.queryType === VariableQueryTypes.Activity && (\n            <InlineFieldRow>\n              <InlineField label=\"Activity Type\" labelWidth={20}>\n                <Select\n                  width={16}\n                  value={query.activityType}\n                  onChange={this.onActivityTypeChange}\n                  options={stravaActivityTypeOptions}\n                />\n              </InlineField>\n              <InlineField label=\"Limit\" labelWidth={10} tooltip=\"API query limit. Set to 0 for no limit.\">\n                <Input\n                  type=\"number\"\n                  value={limit}\n                  onChange={this.onLimitStateChange}\n                  onBlur={this.onLimitChange}\n                  width={12}\n                />\n              </InlineField>\n            </InlineFieldRow>\n          )}\n        </div>\n      </>\n    );\n  }\n}\n","import React, { PureComponent, ChangeEvent } from 'react';\nimport { Button, RadioButtonGroup, InlineField, Input } from '@grafana/ui';\nimport { DataSourcePluginOptionsEditorProps, DataSourceSettings } from '@grafana/data';\nimport { StravaAuthType, StravaJsonData, StravaSecureJsonData } from '../types';\n\nconst AuthCodePattern = /code=([\\w]+)/;\n\nconst authOptions = [\n  { label: 'OAuth', value: StravaAuthType.OAuth },\n  { label: 'Refresh token', value: StravaAuthType.RefreshToken },\n];\n\nexport type Props = DataSourcePluginOptionsEditorProps<StravaJsonData>;\n\ntype StravaSettings = DataSourceSettings<StravaJsonData, StravaSecureJsonData>;\n\nexport interface State {\n  config: StravaSettings;\n}\n\nexport class ConfigEditor extends PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    const { options } = this.props;\n\n    this.state = {\n      config: ConfigEditor.defaults(options),\n    };\n\n    this.updateDatasource(this.state.config);\n  }\n\n  static getDerivedStateFromProps(props: Props, state: State) {\n    return {\n      ...state,\n      config: ConfigEditor.defaults(props.options),\n    };\n  }\n\n  static defaults = (options: any) => {\n    if (!options.hasOwnProperty('secureJsonData')) {\n      options.secureJsonData = {};\n    }\n\n    if (!options.hasOwnProperty('jsonData')) {\n      options.jsonData = {};\n    }\n\n    if (!options.hasOwnProperty('secureJsonFields')) {\n      options.secureJsonFields = {};\n    }\n\n    if (!options.jsonData.stravaAuthType) {\n      options.jsonData.stravaAuthType = StravaAuthType.OAuth;\n    }\n\n    return options;\n  };\n\n  updateDatasource = async (config: any) => {\n    for (const j in config.jsonData) {\n      if (config.jsonData[j].length === 0) {\n        delete config.jsonData[j];\n      }\n    }\n\n    for (const k in config.secureJsonData) {\n      if (config.secureJsonData[k].length === 0) {\n        delete config.secureJsonData[k];\n      }\n    }\n\n    this.props.onOptionsChange({\n      ...config,\n    });\n  };\n\n  onResetClientSecret = () => {\n    this.updateDatasource({\n      ...this.state.config,\n      secureJsonFields: {\n        ...this.state.config.secureJsonFields,\n        clientSecret: false,\n      },\n    });\n  };\n\n  onResetRefreshToken = () => {\n    this.updateDatasource({\n      ...this.state.config,\n      secureJsonFields: {\n        ...this.state.config.secureJsonFields,\n        refreshToken: false,\n      },\n    });\n  };\n\n  onAccessTokenChange = (accessToken: string) => {\n    this.updateDatasource({\n      ...this.state.config,\n      secureJsonData: {\n        ...this.state.config.secureJsonData,\n        accessToken,\n      },\n    });\n  };\n\n  onClientIDChange = (clientID: string) => {\n    this.updateDatasource({\n      ...this.state.config,\n      jsonData: {\n        ...this.state.config.jsonData,\n        clientID,\n      },\n    });\n  };\n\n  onClientSecretChange = (clientSecret: string) => {\n    this.updateDatasource({\n      ...this.state.config,\n      secureJsonData: {\n        ...this.state.config.secureJsonData,\n        clientSecret,\n      },\n    });\n  };\n\n  onRefreshTokenChange = (refreshToken: string) => {\n    this.updateDatasource({\n      ...this.state.config,\n      secureJsonData: {\n        ...this.state.config.secureJsonData,\n        refreshToken,\n      },\n    });\n  };\n\n  onAuthCodeChange = (authCode: string) => {\n    this.updateDatasource({\n      ...this.state.config,\n      secureJsonData: {\n        ...this.state.config.secureJsonData,\n        authCode,\n      },\n    });\n  };\n\n  onAuthTypeChange = (value?: StravaAuthType) => {\n    this.updateDatasource({\n      ...this.state.config,\n      jsonData: {\n        ...this.state.config.jsonData,\n        stravaAuthType: value,\n      },\n    });\n  };\n\n  isLocationContainsCode = () => {\n    return AuthCodePattern.test(window.location.search);\n  };\n\n  isLocationContainsError = () => {\n    return /error=/.test(window.location.search);\n  };\n\n  getConnectWithStravaHref = () => {\n    const authUrl = 'https://www.strava.com/oauth/authorize';\n    const currentLocation = window.location.origin + window.location.pathname;\n    const clientID = this.state.config.jsonData.clientID;\n    const authScope = 'read_all,profile:read_all,activity:read_all';\n    return `${authUrl}?client_id=${clientID}&response_type=code&redirect_uri=${currentLocation}&approval_prompt=force&scope=${authScope}`;\n  };\n\n  render() {\n    const { config } = this.state;\n    const connectWithStravaHref = this.getConnectWithStravaHref();\n\n    return (\n      <>\n        <h2 className=\"page-heading\">Strava API Details</h2>\n        <div className=\"gf-form-group\">\n          <h5>Auth type</h5>\n          <RadioButtonGroup\n            options={authOptions}\n            value={config.jsonData.stravaAuthType}\n            onChange={this.onAuthTypeChange}\n          />\n        </div>\n        <div className=\"gf-form-group\">\n          <InlineField label=\"Client ID\" labelWidth={16}>\n            <Input\n              width={50}\n              value={config.jsonData.clientID || ''}\n              onChange={(event: ChangeEvent<HTMLInputElement>) => this.onClientIDChange(event.target.value)}\n            />\n          </InlineField>\n          {config.secureJsonFields && config.secureJsonFields.clientSecret ? (\n            <InlineField label=\"Client Secret\" labelWidth={16}>\n              <>\n                <Input placeholder=\"Configured\" width={50} disabled />\n                <Button variant=\"secondary\" type=\"button\" onClick={this.onResetClientSecret}>\n                  Reset\n                </Button>\n              </>\n            </InlineField>\n          ) : (\n            <InlineField label=\"Client Secret\" labelWidth={16}>\n              <Input\n                width={50}\n                value={config.secureJsonData?.clientSecret || ''}\n                onChange={(event: ChangeEvent<HTMLInputElement>) => this.onClientSecretChange(event.target.value)}\n              />\n            </InlineField>\n          )}\n          {config.jsonData?.stravaAuthType === StravaAuthType.RefreshToken && (\n            <>\n              {config.secureJsonFields && config.secureJsonFields.refreshToken ? (\n                <InlineField label=\"Refresh Token\" labelWidth={16}>\n                  <>\n                    <Input placeholder=\"Configured\" width={50} disabled />\n                    <Button variant=\"secondary\" type=\"button\" onClick={this.onResetRefreshToken}>\n                      Reset\n                    </Button>\n                  </>\n                </InlineField>\n              ) : (\n                <InlineField label=\"Refresh Token\" labelWidth={16}>\n                  <Input\n                    width={50}\n                    value={config.secureJsonData?.refreshToken || ''}\n                    onChange={(event: ChangeEvent<HTMLInputElement>) => this.onRefreshTokenChange(event.target.value)}\n                  />\n                </InlineField>\n              )}\n            </>\n          )}\n        </div>\n        {config.jsonData?.stravaAuthType !== StravaAuthType.RefreshToken && (\n          <div className=\"gf-form-group\">\n            <a type=\"button\" href={connectWithStravaHref}>\n              <img src=\"public/plugins/grafana-strava-datasource/img/btn_strava_connectwith_orange.svg\" />\n            </a>\n          </div>\n        )}\n      </>\n    );\n  }\n}\n","import React, { FC } from 'react';\nimport { css, cx } from 'emotion';\nimport { InlineFormLabel, stylesFactory, useTheme } from '@grafana/ui';\nimport { GrafanaTheme } from '@grafana/data';\nimport { StravaAthlete } from '../types';\n\nconst getStyles = stylesFactory((theme: GrafanaTheme) => {\n  return {\n    athleteLabel: css`\n      height: ${theme.spacing.formInputHeight}px;\n      padding: 2px;\n      margin-right: 0px;\n      border-radius: ${theme.border.radius.md};\n      background-color: ${theme.palette.dark4};\n    `,\n    athleteAvatar: css`\n      height: 28px;\n      border-radius: 50%;\n    `,\n    athletePlaceholder: css`\n      width: 28px;\n    `,\n  };\n});\n\ninterface Props {\n  athlete?: StravaAthlete;\n}\n\nexport const AthleteLabel: FC<Props> = (props: Props) => {\n  const { athlete } = props;\n  const styles = getStyles(useTheme());\n  const imgClass = cx('filter-table__avatar', styles.athleteAvatar);\n  return (\n    <div className=\"gf-form\">\n      {athlete?.profile_medium ? (\n        <div className={styles.athleteLabel}>\n          <img className={imgClass} src={athlete.profile_medium} />\n        </div>\n      ) : (\n        <div className={styles.athletePlaceholder}></div>\n      )}\n      <InlineFormLabel>\n        {athlete?.firstname} {athlete?.lastname}\n      </InlineFormLabel>\n    </div>\n  );\n};\n","import React, { PureComponent } from 'react';\nimport { SelectableValue, QueryEditorProps, dateTime } from '@grafana/data';\nimport { InlineField, InlineFormLabel, InlineSwitch, MultiSelect, Select } from '@grafana/ui';\nimport {\n  StravaQuery,\n  StravaQueryType,\n  StravaActivityStat,\n  StravaQueryFormat,\n  StravaActivityType,\n  StravaJsonData,\n  StravaQueryInterval,\n  StravaActivityStream,\n  StravaActivityData,\n  StravaSplitStat,\n  StravaAthlete,\n} from '../types';\nimport StravaDatasource from '../datasource';\nimport { AthleteLabel } from './AthleteLabel';\nimport { getTemplateSrv } from '@grafana/runtime';\n\nconst ACTIVITY_DATE_FORMAT = 'YYYY-MM-DD HH:mm';\n\nconst stravaQueryTypeOptions: Array<SelectableValue<StravaQueryType>> = [\n  {\n    value: StravaQueryType.Activities,\n    label: 'Activities',\n    description: 'Athlete Activities',\n  },\n  {\n    value: StravaQueryType.Activity,\n    label: 'Activity',\n    description: 'Individual activity',\n  },\n];\n\nconst stravaActivityStatOptions: Array<SelectableValue<StravaActivityStat>> = [\n  { value: StravaActivityStat.Distance, label: 'Distance' },\n  { value: StravaActivityStat.ElapsedTime, label: 'Elapsed Time' },\n  { value: StravaActivityStat.MovingTime, label: 'Moving Time' },\n  { value: StravaActivityStat.ElevationGain, label: 'Elevation Gain' },\n  { value: StravaActivityStat.AveragePower, label: 'Average Power' },\n  { value: StravaActivityStat.AverageHeartRate, label: 'Average Heart Rate' },\n];\n\nconst stravaActivityTypeOptions: Array<SelectableValue<StravaActivityType>> = [\n  { value: null, label: 'All' },\n  { value: 'Run', label: 'Run' },\n  { value: 'Ride', label: 'Ride' },\n  { value: 'Other', label: 'Other' },\n];\n\nconst stravaActivityDataOptions: Array<SelectableValue<StravaActivityData>> = [\n  { value: StravaActivityData.Graph, label: 'Graph' },\n  { value: StravaActivityData.Splits, label: 'Splits' },\n  { value: StravaActivityData.Stats, label: 'Stats' },\n  { value: StravaActivityData.Geomap, label: 'Geomap' },\n];\n\nconst stravaActivityGraphOptions: Array<SelectableValue<StravaActivityStream>> = [\n  // { value: StravaActivityStream.Distance, label: 'Distance' },\n  { value: StravaActivityStream.HeartRate, label: 'Heart Rate' },\n  { value: StravaActivityStream.Velocity, label: 'Speed' },\n  { value: StravaActivityStream.Pace, label: 'Pace' },\n  { value: StravaActivityStream.WattsCalc, label: 'Est Power' },\n  { value: StravaActivityStream.Watts, label: 'Watts' },\n  { value: StravaActivityStream.Cadence, label: 'Cadence' },\n  { value: StravaActivityStream.Altitude, label: 'Altitude' },\n  { value: StravaActivityStream.GradeSmooth, label: 'Gradient' },\n  // { value: StravaActivityStream.GradeAdjustedDistance, label: 'Gradient (adjusted)' },\n  // { value: StravaActivityStream.Temp, label: 'Temp' },\n];\n\nconst stravaActivitySplitOptions: Array<SelectableValue<StravaSplitStat>> = [\n  { value: StravaSplitStat.HeartRate, label: 'Heart Rate' },\n  { value: StravaSplitStat.Speed, label: 'Speed' },\n  { value: StravaSplitStat.ElapsedTime, label: 'Elapsed Time' },\n  { value: StravaSplitStat.MovingTime, label: 'Moving Time' },\n];\n\nconst FORMAT_OPTIONS: Array<SelectableValue<StravaQueryFormat>> = [\n  { label: 'Time series', value: StravaQueryFormat.TimeSeries },\n  { label: 'Table', value: StravaQueryFormat.Table },\n  { label: 'Geomap', value: StravaQueryFormat.WorldMap },\n  { label: 'Heatmap', value: StravaQueryFormat.Heatmap },\n];\n\nconst INTERVAL_OPTIONS: Array<SelectableValue<StravaQueryInterval>> = [\n  { label: 'Auto', value: StravaQueryInterval.Auto },\n  { label: 'No', value: StravaQueryInterval.No },\n  { label: 'Hour', value: StravaQueryInterval.Hour },\n  { label: 'Day', value: StravaQueryInterval.Day },\n  { label: 'Week', value: StravaQueryInterval.Week },\n  { label: 'Month', value: StravaQueryInterval.Month },\n];\n\nconst extendedStatsOptions: Array<SelectableValue<string>> = [\n  { label: 'achievement_count', value: 'achievement_count' },\n  { label: 'average_speed', value: 'average_speed' },\n  { label: 'average_watts', value: 'average_watts' },\n  { label: 'comment_count', value: 'comment_count' },\n  { label: 'commute', value: 'commute' },\n  { label: 'device_watts', value: 'device_watts' },\n  { label: 'elev_high', value: 'elev_high' },\n  { label: 'elev_low', value: 'elev_low' },\n  { label: 'has_kudoed', value: 'has_kudoed' },\n  { label: 'kudos_count', value: 'kudos_count' },\n  { label: 'location_city', value: 'location_city' },\n  { label: 'location_country', value: 'location_country' },\n  { label: 'location_state', value: 'location_state' },\n  { label: 'manual', value: 'manual' },\n  { label: 'max_heartrate', value: 'max_heartrate' },\n  { label: 'max_speed', value: 'max_speed' },\n  { label: 'pr_count', value: 'pr_count' },\n  { label: 'start_date', value: 'start_date' },\n  { label: 'start_date_local', value: 'start_date_local' },\n  { label: 'start_latitude', value: 'start_latitude' },\n  { label: 'start_longitude', value: 'start_longitude' },\n  { label: 'trainer', value: 'trainer' },\n  { label: 'workout_type', value: 'workout_type' },\n  { label: 'device_name', value: 'device_name' },\n  { label: 'gear_id', value: 'gear_id' },\n  { label: 'gear_name', value: 'gear_name' },\n  { label: 'gear_nickname', value: 'device_nickname' },\n  { label: 'gear_distance', value: 'gear_distance' },\n];\n\nconst baseStatsOptions: Array<SelectableValue<string>> = [\n  { label: 'start_date', value: 'start_date' },\n  { label: 'name', value: 'name' },\n  { label: 'distance', value: 'distance' },\n  { label: 'moving_time', value: 'moving_time' },\n  { label: 'elapsed_time', value: 'elapsed_time' },\n  { label: 'average_heartrate', value: 'average_heartrate' },\n  { label: 'total_elevation_gain', value: 'total_elevation_gain' },\n  { label: 'kilojoules', value: 'kilojoules' },\n  { label: 'type', value: 'type' },\n  { label: 'id', value: 'id' },\n];\n\nconst stravaStatsOptions = baseStatsOptions.concat(extendedStatsOptions);\n\nexport const DefaultTarget: State = {\n  refId: '',\n  athlete: {} as StravaAthlete,\n  queryType: StravaQueryType.Activities,\n  activityType: null,\n  activitiesOptions: [],\n  activityStat: StravaActivityStat.Distance,\n  format: StravaQueryFormat.TimeSeries,\n  interval: StravaQueryInterval.Auto,\n  activityData: StravaActivityData.Graph,\n  activityGraph: StravaActivityStream.HeartRate,\n  extendedStats: [],\n  singleActivityStat: '',\n};\n\nexport interface Props extends QueryEditorProps<StravaDatasource, StravaQuery, StravaJsonData> {}\n\ninterface State extends StravaQuery {\n  athlete?: StravaAthlete;\n  selectedActivity?: SelectableValue<number>;\n  activitiesOptions: Array<SelectableValue<number>>;\n}\n\nexport class QueryEditor extends PureComponent<Props, State> {\n  state: State = DefaultTarget;\n\n  async componentDidMount() {\n    let athlete = this.props.datasource.athlete;\n    if (!athlete) {\n      athlete = await this.props.datasource.stravaApi.getAuthenticatedAthlete();\n    }\n    const activitiesOptions = await this.getActivitiesOptions(this.props.query.activityType);\n    this.setState({ athlete, activitiesOptions });\n  }\n\n  getSelectedQueryType = () => {\n    return stravaQueryTypeOptions.find((v) => v.value === this.props.query.queryType);\n  };\n\n  getSelectedActivityStat = () => {\n    return stravaActivityStatOptions.find((v) => v.value === this.props.query.activityStat);\n  };\n\n  getSelectedActivityType = () => {\n    return stravaActivityTypeOptions.find((v) => v.value === this.props.query.activityType);\n  };\n\n  getSelectedActivityData = () => {\n    return stravaActivityDataOptions.find((v) => v.value === this.props.query.activityData);\n  };\n\n  getSelectedActivityGraph = () => {\n    return stravaActivityGraphOptions.find((v) => v.value === this.props.query.activityGraph);\n  };\n\n  getSelectedActivitySplit = () => {\n    return stravaActivitySplitOptions.find((v) => v.value === this.props.query.splitStat);\n  };\n\n  getSelectedSingleActivityStat = () => {\n    return stravaStatsOptions.find((v) => v.value === this.props.query.singleActivityStat);\n  };\n\n  getFormatOption = () => {\n    return FORMAT_OPTIONS.find((v) => v.value === this.props.query.format);\n  };\n\n  getIntervalOption = () => {\n    return INTERVAL_OPTIONS.find((v) => v.value === this.props.query.interval);\n  };\n\n  getSelectedActivityOption = () => {\n    return this.props.query.selectedActivity;\n  };\n\n  getActivitiesOptions = async (activityType: StravaActivityType): Promise<Array<SelectableValue<number>>> => {\n    const { datasource } = this.props;\n    let activities = await datasource.stravaApi.getActivities({ limit: 100 });\n    activities = datasource.filterActivities(activities, activityType);\n    let options: Array<SelectableValue<number>> = activities.map((a) => ({\n      value: a.id,\n      label: a.name,\n      description: `${dateTime(a.start_date_local).format(ACTIVITY_DATE_FORMAT)} (${a.type})`,\n    }));\n\n    const variables: SelectableValue[] = getTemplateSrv()\n      .getVariables()\n      .map((v) => ({\n        value: `$${v.name}`,\n        label: `$${v.name}`,\n        description: 'Variable',\n      }));\n    options = variables.concat(options);\n\n    return options;\n  };\n\n  onQueryTypeChanged = (option: SelectableValue<StravaQueryType>) => {\n    const { query } = this.props;\n    if (option.value) {\n      this.onChange({ ...query, queryType: option.value });\n    }\n  };\n\n  onActivityStatChanged = (option: SelectableValue<StravaActivityStat>) => {\n    const { query } = this.props;\n    if (option.value) {\n      this.onChange({ ...query, activityStat: option.value });\n    }\n  };\n\n  onActivityDataChanged = (option: SelectableValue<StravaActivityData>) => {\n    const { query } = this.props;\n    if (option.value) {\n      this.onChange({ ...query, activityData: option.value });\n    }\n  };\n\n  onActivityGraphChanged = (option: SelectableValue<StravaActivityStream>) => {\n    const { query } = this.props;\n    if (option.value) {\n      this.onChange({ ...query, activityGraph: option.value });\n    }\n  };\n\n  onActivitySplitChanged = (option: SelectableValue<StravaSplitStat>) => {\n    const { query } = this.props;\n    if (option.value) {\n      this.onChange({ ...query, splitStat: option.value });\n    }\n  };\n\n  onActivityTypeChanged = async (option: SelectableValue<StravaActivityType>) => {\n    const { query } = this.props;\n    if (option.value !== undefined) {\n      this.onChange({ ...query, activityType: option.value });\n\n      const activitiesOptions = await this.getActivitiesOptions(option.value);\n      this.setState({ activitiesOptions });\n    }\n  };\n\n  onFitToRangeChanged = (event: React.FormEvent<HTMLInputElement>) => {\n    const { query } = this.props;\n    this.onChange({ ...query, fitToTimeRange: !query.fitToTimeRange });\n  };\n\n  onFormatChange = (option: SelectableValue<StravaQueryFormat>) => {\n    const { query } = this.props;\n    if (option.value) {\n      this.onChange({ ...query, format: option.value });\n    }\n  };\n\n  onIntervalChange = (option: SelectableValue<StravaQueryInterval>) => {\n    const { query } = this.props;\n    if (option.value) {\n      this.onChange({ ...query, interval: option.value });\n    }\n  };\n\n  onActivityChanged = (option: SelectableValue<number>) => {\n    const { query } = this.props;\n    if (option.value !== undefined) {\n      this.onChange({ ...query, activityId: option.value, selectedActivity: option });\n    }\n  };\n\n  onExtendedStatsChanged = (options: Array<SelectableValue<string>>) => {\n    const { query } = this.props;\n    console.log(options);\n    if (options) {\n      const values: string[] = [];\n      options.forEach((option) => option.value && values.push(option.value));\n      this.onChange({ ...query, extendedStats: values });\n    }\n  };\n\n  onSingleActivityStatChanged = (option: SelectableValue<string>) => {\n    const { query } = this.props;\n    if (option.value) {\n      this.onChange({ ...query, singleActivityStat: option.value });\n    }\n  };\n\n  onChange(query: StravaQuery) {\n    const { onChange, onRunQuery } = this.props;\n    onChange(query);\n    onRunQuery();\n  }\n\n  renderActivitiesEditor() {\n    const { query } = this.props;\n    return (\n      <>\n        <div className=\"gf-form-inline\">\n          <InlineFormLabel width={12}>&nbsp;</InlineFormLabel>\n          <InlineFormLabel width={5}>Format</InlineFormLabel>\n          <Select\n            isSearchable={false}\n            width={16}\n            options={FORMAT_OPTIONS}\n            onChange={this.onFormatChange}\n            value={this.getFormatOption()}\n          />\n          {query.format !== StravaQueryFormat.Heatmap && (\n            <>\n              <InlineFormLabel width={6}>Stat</InlineFormLabel>\n              <Select\n                isSearchable={false}\n                width={16}\n                value={this.getSelectedActivityStat()}\n                options={stravaActivityStatOptions}\n                onChange={this.onActivityStatChanged}\n              />\n            </>\n          )}\n          {query.format === StravaQueryFormat.TimeSeries && (\n            <>\n              <InlineFormLabel width={6}>Interval</InlineFormLabel>\n              <Select\n                isSearchable={false}\n                width={16}\n                options={INTERVAL_OPTIONS}\n                onChange={this.onIntervalChange}\n                value={this.getIntervalOption()}\n              />\n            </>\n          )}\n          <div className=\"gf-form gf-form--grow\">\n            <div className=\"gf-form-label gf-form-label--grow\" />\n          </div>\n        </div>\n        {query.format === StravaQueryFormat.Table && (\n          <div className=\"gf-form-inline\">\n            <InlineFormLabel width={12}>&nbsp;</InlineFormLabel>\n            <InlineField label=\"Extended Stats\" labelWidth={14}>\n              <MultiSelect\n                isSearchable\n                isClearable\n                value={query.extendedStats}\n                options={extendedStatsOptions}\n                onChange={this.onExtendedStatsChanged}\n              />\n            </InlineField>\n            <div className=\"gf-form gf-form--grow\">\n              <div className=\"gf-form-label gf-form-label--grow\" />\n            </div>\n          </div>\n        )}\n      </>\n    );\n  }\n\n  renderActivityEditor() {\n    const { query } = this.props;\n    const { activitiesOptions } = this.state;\n\n    return (\n      <>\n        <div className=\"gf-form-inline\">\n          <InlineFormLabel width={12}>&nbsp;</InlineFormLabel>\n          <InlineFormLabel width={5}>Activity</InlineFormLabel>\n          <Select\n            isSearchable={true}\n            width={33}\n            value={this.getSelectedActivityOption()}\n            options={activitiesOptions}\n            onChange={this.onActivityChanged}\n          />\n          <InlineField label=\"Data\" labelWidth={10}>\n            <Select\n              isSearchable={false}\n              width={16}\n              value={this.getSelectedActivityData()}\n              options={stravaActivityDataOptions}\n              onChange={this.onActivityDataChanged}\n            />\n          </InlineField>\n          {query.activityData === StravaActivityData.Graph && (\n            <Select\n              isSearchable={false}\n              width={16}\n              value={this.getSelectedActivityGraph()}\n              options={stravaActivityGraphOptions}\n              onChange={this.onActivityGraphChanged}\n            />\n          )}\n          {query.activityData === StravaActivityData.Splits && (\n            <Select\n              isSearchable={false}\n              width={16}\n              value={this.getSelectedActivitySplit()}\n              options={stravaActivitySplitOptions}\n              onChange={this.onActivitySplitChanged}\n            />\n          )}\n          {query.activityData === StravaActivityData.Stats && (\n            <Select\n              isSearchable={true}\n              width={20}\n              value={this.getSelectedSingleActivityStat()}\n              options={stravaStatsOptions}\n              onChange={this.onSingleActivityStatChanged}\n            />\n          )}\n          <InlineFormLabel width={5}>Fit to range</InlineFormLabel>\n          <InlineSwitch css=\"\" value={query.fitToTimeRange || false} onChange={this.onFitToRangeChanged}></InlineSwitch>\n          <div className=\"gf-form gf-form--grow\">\n            <div className=\"gf-form-label gf-form-label--grow\" />\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  render() {\n    const { athlete } = this.state;\n    const queryType = this.getSelectedQueryType();\n\n    return (\n      <>\n        <div className=\"gf-form-inline\">\n          <AthleteLabel athlete={athlete} />\n          <InlineFormLabel width={5}>Query</InlineFormLabel>\n          <Select\n            isSearchable={false}\n            width={16}\n            value={this.getSelectedQueryType()}\n            options={stravaQueryTypeOptions}\n            onChange={this.onQueryTypeChanged}\n          />\n          <InlineFormLabel width={6}>Activity type</InlineFormLabel>\n          <Select\n            isSearchable={false}\n            width={16}\n            value={this.getSelectedActivityType()}\n            options={stravaActivityTypeOptions}\n            onChange={this.onActivityTypeChanged}\n          />\n          <div className=\"gf-form gf-form--grow\">\n            <div className=\"gf-form-label gf-form-label--grow\" />\n          </div>\n        </div>\n        {queryType?.value === StravaQueryType.Activities && this.renderActivitiesEditor()}\n        {queryType?.value === StravaQueryType.Activity && this.renderActivityEditor()}\n      </>\n    );\n  }\n}\n","import { DataSourcePlugin } from '@grafana/data';\nimport { StravaVariableQueryEditor } from './components/VariableQueryEditor';\nimport { ConfigEditor } from './components/ConfigEditor';\nimport { QueryEditor } from './components/QueryEditor';\nimport StravaDatasource from './datasource';\nimport { StravaJsonData, StravaQuery } from './types';\n\nclass StravaAnnotationsQueryCtrl {\n  static templateUrl = 'partials/annotations.editor.html';\n}\n\nexport const plugin = new DataSourcePlugin<StravaDatasource, StravaQuery, StravaJsonData>(StravaDatasource)\n  .setConfigEditor(ConfigEditor)\n  .setQueryEditor(QueryEditor)\n  .setAnnotationQueryCtrl(StravaAnnotationsQueryCtrl)\n  .setVariableQueryEditor(StravaVariableQueryEditor);\n"],"sourceRoot":""}